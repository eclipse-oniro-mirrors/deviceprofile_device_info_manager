# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos_var.gni")
import("//build/config/components/idl_tool/idl.gni")
import("//foundation/deviceprofile/device_info_manager/deviceprofile.gni")

idl_gen_interface("dp_business_callback_interfaces") {
  sources = [
    "IBusinessCallback.idl",
  ]
  log_domainid = "0xD004400"
  log_tag = "DHDP"
}

config("business_callback_interfaces_ipc_config"){
  include_dirs = [
    ".",
    "${target_gen_dir}/",
  ]
}

ohos_source_set("business_callback_interfaces_ipc") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  output_values = get_target_outputs(":dp_business_callback_interfaces")
  sources = []
  sources += filter_include(output_values, [ "*.cpp" ])
  public_configs = [
    ":business_callback_interfaces_ipc_config"
  ]
  include_dirs = [
    "${device_profile_common}/include/constants",
    "${device_profile_common}/include/interfaces",
    "${device_profile_common}/include/utils",
  ]
  deps = [ ":dp_business_callback_interfaces",]
  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  part_name = "device_info_manager"
  subsystem_name = "deviceprofile"
}

config("distributed_device_profile_common_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "include/interfaces",
    "include/constants",
    "include/utils",
  ]
}

ohos_shared_library("distributed_device_profile_common") {
  branch_protector_ret = "pac_ret"
  ldflags = [
    "-Wl,-z,relro",
    "-Wl,-z,now",
  ]

  cflags = [
    "-fPIC",
    "-D_FORTIFY_SOURCE=2",
    "-O2",
  ]

  cflags_cc = cflags

  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    ubsan = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  install_enable = true

  sources = [
    "src/constants/distributed_device_profile_constants.cpp",
    "src/interfaces/access_control_profile.cpp",
    "src/interfaces/accessee.cpp",
    "src/interfaces/accesser.cpp",
    "src/interfaces/business_event.cpp",
    "src/interfaces/characteristic_profile.cpp",
    "src/interfaces/device_icon_info.cpp",
    "src/interfaces/device_icon_info_filter_options.cpp",
    "src/interfaces/device_profile.cpp",
    "src/interfaces/device_profile_filter_options.cpp",
    "src/interfaces/dp_inited_callback_proxy.cpp",
    "src/interfaces/dp_inited_callback_stub.cpp",
    "src/interfaces/dp_subscribe_info.cpp",
    "src/interfaces/dp_sync_options.cpp",
    "src/interfaces/i_profile_change_listener.cpp",
    "src/interfaces/local_service_info.cpp",
    "src/interfaces/pincode_invalid_callback_proxy.cpp",
    "src/interfaces/pincode_invalid_callback_stub.cpp",
    "src/interfaces/product_info.cpp",
    "src/interfaces/profile_change_listener_proxy.cpp",
    "src/interfaces/profile_change_listener_stub.cpp",
    "src/interfaces/query_profile.cpp",
    "src/interfaces/service_info_profile.cpp",
    "src/interfaces/service_info_unique_key.cpp",
    "src/interfaces/service_profile.cpp",
    "src/interfaces/sync_completed_callback_proxy.cpp",
    "src/interfaces/sync_completed_callback_stub.cpp",
    "src/interfaces/trust_device_profile.cpp",
    "src/interfaces/trusted_device_info.cpp",
    "src/utils/content_sensor_manager_utils.cpp",
    "src/utils/ipc_utils.cpp",
    "src/utils/log_utils.cpp",
    "src/utils/profile_utils.cpp",
  ]

  deps = [":business_callback_interfaces_ipc"]

  public_configs = [
    ":business_callback_interfaces_ipc_config",
    ":distributed_device_profile_common_config"
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "cJSON:cjson",
    "c_utils:utils",
    "device_manager:devicemanagersdk",
    "dmsfwk:common_sdk",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  part_name = "device_info_manager"
  subsystem_name = "deviceprofile"
}
